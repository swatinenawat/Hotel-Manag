*******************DAO IMPL***************

	@Override
	public ArrayList<RoomDetails> searchRoom(int hotelId) throws HotelBookingException
	{
		ArrayList<RoomDetails> searchList;
		try
		{
			con=DBUtil.getConn();
			searchList = new ArrayList<RoomDetails>();
			String selectqry="SELECT * FROM RoomDetails WHERE hotel_id = ?";
			pst=con.prepareStatement(selectqry);
			pst.setInt(1,hotelId);
			rs=pst.executeQuery();
			
		while(rs.next())
		{
			searchList.add(new RoomDetails(rs.getString("hotel_id"), rs.getString("room_id"), rs.getString(" room_no"),
					rs.getString("room_type"),rs.getFloat("cost"), rs.getString("availability"),
					rs.getString("photo")));
		}
		}
		catch(Exception e)
		{
			e.printStackTrace();
			throw new HotelBookingException("Does Not Exist");
		}
		return searchList;
	}

	@Override
	public ArrayList<Hotel> displayHotels() throws HotelBookingException 
	{

		ArrayList<Hotel> hList;
		try
		{
			hList = new ArrayList<Hotel>();
			con=DBUtil.getConn();
			String selectqry="SELECT * from Hotel";
			st=con.createStatement();
			rs=st.executeQuery(selectqry);
			while(rs.next())
			{
				hList.add(new Hotel(rs.getString("hotel_id"),rs.getString("city"),rs.getString("hotel_name"),
									rs.getString("address"),rs.getString("description"),rs.getString("cost"),
									rs.getString("phno_no1"),rs.getString("phno_no2"),rs.getString("rating"),
									rs.getString("email"),rs.getString("fax")));
			}
		}
		catch(Exception e)
			{
				e.printStackTrace();
				throw new HotelBookingException("Error");
			}
		finally
		{
			try
			{
				st.close();
				rs.close();
				con.close();
			}
			catch(SQLException e)
			{
				e.printStackTrace();
				throw new HotelBookingException(e.getMessage());
			}
		}
		return hList;
	}
	***************************************************************************************************
					*********************MAIN CLASS**************************
					
	private static void searchRoom() 
	{
		ArrayList<RoomDetails> searchList;
		try 
		{
			System.out.println("Enter Hotel Id");
			int hotelId = sc.nextInt();
			searchList=hbs.searchRoom(hotelId);
			for(RoomDetails r:searchList)
			{
				System.out.println("\t"+r.getRoom_id() + "\t" +r.getRoom_no() +"\t"+r.getRoom_type()
									+"\t"+r.getCost()+"\t"+r.getAvailability()+"\t"+r.getPhoto());
			}
		} 
		catch (Exception e) 
		{
			e.printStackTrace();
			System.out.println("Not available");
		} 
	}
	
					
					
					
